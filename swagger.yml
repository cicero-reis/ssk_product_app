openapi: 3.0.0
info:
  title: Products API
  version: 1.0.0
  description: Documentation of the Self Service Kiosk Products API endpoints

servers:
  - url: http://localhost:3000

paths:
  /api/v1/products:
    get:
      tags:
        - Products V1
      summary: List all products
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
    post:
      tags:
        - Products V1
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Big Mac 01
                description:
                  type: string
                  example: Lorem Ipsum...
                price:
                  type: string
                  example: "5.00"
                client_id:
                  type: string
                  example: 67df66d03359ef45ee087872
                category_id:
                  type: integer
                  example: 1
                original_name:
                  type: string
                  example: big-mac.png
                stored_filename:
                  type: string
                  example: product_1_1743853447_big-mac.png
      responses:
        '201':
          description: Product successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /api/v1/products/{id}:
    get:
      tags:
        - Products V1
      summary: Get a specific product
      parameters:
        - name: id
          in: path
          required: true
          description: Product ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Product found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
    put:
      tags:
        - Products V1
      summary: Update a specific product
      parameters:
        - name: id
          in: path
          required: true
          description: Product ID
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Big Mac 01 Updated
                description:
                  type: string
                  example: Lorem Ipsum Updated...
                price:
                  type: string
                  example: "6.00"
                client_id:
                  type: string
                  example: 67df66d03359ef45ee087872
                category_id:
                  type: integer
                  example: 1
                original_name:
                  type: string
                  example: big-mac-updated.png
                stored_filename:
                  type: string
                  example: product_1_1743853447_big-mac-updated.png
      responses:
        '200':
          description: Product successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
    delete:
      tags:
        - Products V1
      summary: Delete a specific product
      parameters:
        - name: id
          in: path
          required: true
          description: Product ID to be deleted
          schema:
            type: integer
            example: 1
      responses:
        '204':
          description: Product successfully deleted          
    post:
      tags:
        - Products V1
      summary: Upload product image
      parameters:
        - name: id
          in: path
          required: true
          description: Product ID
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Image successfully uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Upload successful
                  product:
                    $ref: '#/components/schemas/Product'
        '400':
          description: Upload failed

  /api/v2/products/{categoryId}/category:
    get:
      tags:
        - Products v2
      summary: List products by category
      parameters:
        - name: categoryId
          in: path
          required: true
          description: Category ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: List of products in the category
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '404':
          description: Category not found

  /api/v2/products/{id}/client:
    get:
      tags:
        - Products v2
      summary: Get products by client ID
      parameters:
        - name: id
          in: path
          required: true
          description: Client ID
          schema:
            type: string
            example: 67df66d03359ef45ee087872
      responses:
        '200':
          description: List of products for the client
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '404':
          description: Client not found  

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Big Mac 01
        description:
          type: string
          example: Lorem Ipsum...
        price:
          type: string
          example: "5.00"
        client_id:
          type: string
          example: 67df66d03359ef45ee087872
        category_id:
          type: integer
          example: 1
        original_name:
          type: string
          example: big-mac.png
        stored_filename:
          type: string
          example: product_1_1743853447_big-mac.png
        created_at:
          type: string
          format: date-time
          example: 2025-04-05T11:40:23.000000Z
